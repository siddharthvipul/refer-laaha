<?php

/**
 * @file
 * Contains erpw_in_app_notification.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Url;
use Drupal\Core\Datetime\DrupalDateTime;
use Drupal\node\Entity\Node;
use Drupal\webform\WebformSubmissionInterface;

/**
 * Implements hook_help().
 */
function erpw_in_app_notification_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the erpw_in_app_notification module.
    case 'help.page.erpw_in_app_notification':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Module will enable the inapp notification feature') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function erpw_in_app_notification_theme() {
  return [
    'erpw_in_app_notification' => [
      'render element' => 'children',
    ],
    'notification_block' => [
      'variables' => [
        'content' => NULL,
      ],
      'render element' => 'children',
    ],
    'user_notification' => [
      'variables' => [
        'user' => '',
        'role' => '',
        'service' => '',
        'common_var' => '',
      ],
    ],
    'notification_block' => [
      'variables' => [
        'count' => 0,
      ],
    ],
    'user_notification_modal' => [
      'variables' => [
        'combined' => '',
        'common_var' => '',
      ],
    ],
  ];
}

/**
 * Implements hook_entity_type_insert() for a webform_submision entity type.
 */
function erpw_in_app_notification_webform_submission_insert(WebformSubmissionInterface $webform_submission) {
  $webform = $webform_submission->getWebform();
  if (in_array('eRPW', $webform->get('categories'))) {
    erpw_in_app_notification__service_operation($webform_submission, $webform);
  }

}

/**
 * Implements hook_entity_type_update() for a webform_submision entity type.
 */
function erpw_in_app_notification_webform_submission_update(WebformSubmissionInterface $webform_submission) {
  $webform = $webform_submission->getWebform();
  if (in_array('eRPW', $webform->get('categories'))) {
    erpw_in_app_notification__service_operation($webform_submission, $webform);
  }
}

/**
 * This function will helps to records notifications on service.
 */
function erpw_in_app_notification__service_operation($webform_submission, $webform) {
  $values = $webform_submission->getData();
  // Get SID of webform submission.
  $sid = $webform_submission->id();
  // Get current timestamp.
  $ctime = (new DrupalDateTime())->getTimestamp();
  // Get Orgnization name.
  $org = Node::load($values['organisation']);
  // General data preparation.
  $active_domain = \Drupal::service('domain.negotiator')->getActiveDomain();
  $last_non_empty_value = '';
  $composite_value = $values['location'];
  $location_reversed = array_reverse($composite_value);
  if (is_array($composite_value)) {
    foreach ($location_reversed as $value) {
      if (!empty($value)) {
        $last_non_empty_value = $value;
        break;
      }
    }
  }
  // Get Service owner roles.
  $ownerroles = $webform_submission->getOwner()->getRoles(TRUE);

  // Get workflow.
  $erpw_workflow = $webform_submission->getElementData('erpw_workflow');

  // Staff role owned services, Add flow.
  if (in_array('service_provider_staff', $ownerroles)) {
    /**
       * Staff Service Add flow started here.
       */

    if ($erpw_workflow['transition'] == 'submit_to_focal_point') {
      // Focal Point - Service Added - Review.
      $notification_storage = \Drupal::entityTypeManager()->getStorage('notification_entity')->create([
        'field_behavior' => 'link',
        'field_domain' => $active_domain->id(),
        'field_entity_id' => $sid,
        'field_entity_type' => 'service',
        'field_event_id' => 'focal_point__service_added_edited_delete__review',
        'field_location' => $last_non_empty_value,
        'field_organisation' => $values['organisation'] ?? '',
        'field_priority' => 1,
        'field_processed' => FALSE,
        'field_redirect_url' => Url::fromRoute('erpw_webform.service_moderate_content', ['webform_submission' => $sid], [])->toString(),
        'field_role' => 'service_provider_focal_point',
        'field_root_location' => $values['location']['location_options'] ?? '',
        'field_specific_user' => FALSE,
        'field_users_list' => NULL,
        'field_excluded_users' => NULL,
        'status' => 1,
        'created' => $ctime,
        'changed' => $ctime,
        'name' => 'Service -' . $sid,
        'field_title' => $sid . ' - ' . $org->title->value . ' ' . $webform->label(),
        'field_operation' => t('added'),
        'field_workflow_action' => '',
      ]);
      $notification_storage->save();
    }

    // Approved by focal point.
    if ($erpw_workflow['transition'] == 'submit_for_review_to_country_admin') {
      // Focal Point - Service Added - Approved by Focal Point.
      $notification_storage = \Drupal::entityTypeManager()->getStorage('notification_entity')->create([
        'field_behavior' => 'info',
        'field_domain' => $active_domain->id(),
        'field_entity_id' => $sid,
        'field_entity_type' => 'service',
        'field_event_id' => 'focal_point__service_added_edited_deleted__approved_rejected_by_focal_point',
        'field_location' => $last_non_empty_value,
        'field_organisation' => $values['organisation'] ?? '',
        'field_priority' => 0,
        'field_processed' => FALSE,
        'field_redirect_url' => '',
        'field_role' => 'service_provider_focal_point',
        'field_root_location' => $values['location']['location_options'] ?? '',
        'field_specific_user' => TRUE,
        'field_users_list' => NULL,
        'field_excluded_users' => \Drupal::currentUser()->id(),
        'status' => 1,
        'created' => $ctime,
        'changed' => $ctime,
        'name' => 'Service -' . $sid,
        'field_title' => $sid . ' - ' . $org->title->value . ' ' . $webform->label(),
        'field_operation' => t('added'),
        'field_workflow_action' => t('approved'),
      ]);
      $notification_storage->save();

      // Staff - Add Service Approved By Focal Point.
      $notification_storage = \Drupal::entityTypeManager()->getStorage('notification_entity')->create([
        'field_behavior' => 'info',
        'field_domain' => $active_domain->id(),
        'field_entity_id' => $sid,
        'field_entity_type' => 'service',
        'field_event_id' => 'staff__add_edit_service_approved_rejected_by_focal_point',
        'field_location' => $last_non_empty_value,
        'field_organisation' => $values['organisation'] ?? '',
        'field_priority' => 0,
        'field_processed' => FALSE,
        'field_redirect_url' => '',
        'field_role' => 'service_provider_staff',
        'field_root_location' => $values['location']['location_options'] ?? '',
        'field_specific_user' => TRUE,
        'field_users_list' => $webform_submission->getOwner(),
        'field_excluded_users' => NULL,
        'status' => 1,
        'created' => $ctime,
        'changed' => $ctime,
        'name' => 'Service -' . $sid,
        'field_title' => $sid . ' - ' . $org->title->value . ' ' . $webform->label(),
        'field_operation' => t('added'),
        'field_workflow_action' => t('approved'),
      ]);
      $notification_storage->save();

      // GBV Coordination - Service Added - Review.
      $notification_storage = \Drupal::entityTypeManager()->getStorage('notification_entity')->create([
        'field_behavior' => 'link',
        'field_domain' => $active_domain->id(),
        'field_entity_id' => $sid,
        'field_entity_type' => 'service',
        'field_event_id' => 'gbv_coordination__service_added_edited_deleted__review',
        'field_location' => $last_non_empty_value,
        'field_organisation' => $values['organisation'] ?? '',
        'field_priority' => 1,
        'field_processed' => FALSE,
        'field_redirect_url' => Url::fromRoute('erpw_webform.service_moderate_content', ['webform_submission' => $sid], [])->toString(),
        'field_role' => ['interagency_gbv_coordinator', 'country_admin'],
        'field_root_location' => $values['location']['location_options'] ?? '',
        'field_specific_user' => FALSE,
        'field_users_list' => NULL,
        'field_excluded_users' => NULL,
        'status' => 1,
        'created' => $ctime,
        'changed' => $ctime,
        'name' => 'Service -' . $sid,
        'field_title' => $sid . ' - ' . $org->title->value . ' ' . $webform->label(),
        'field_operation' => t('added'),
        'field_workflow_action' => '',
      ]);
      $notification_storage->save();
    }

    // Rejected by focal point.
    if ($erpw_workflow['transition'] == 'rejected_by_focal_point') {

      // Focal Point - Service Added - Rejected by Focal Point.
      $notification_storage = \Drupal::entityTypeManager()->getStorage('notification_entity')->create([
        'field_behavior' => 'info',
        'field_domain' => $active_domain->id(),
        'field_entity_id' => $sid,
        'field_entity_type' => 'service',
        'field_event_id' => 'focal_point__service_added_edited_deleted__approved_rejected_by_focal_point',
        'field_location' => $last_non_empty_value,
        'field_organisation' => $values['organisation'] ?? '',
        'field_priority' => 0,
        'field_processed' => FALSE,
        'field_redirect_url' => '',
        'field_role' => 'service_provider_focal_point',
        'field_root_location' => $values['location']['location_options'] ?? '',
        'field_specific_user' => TRUE,
        'field_users_list' => NULL,
        'field_excluded_users' => \Drupal::currentUser()->id(),
        'status' => 1,
        'created' => $ctime,
        'changed' => $ctime,
        'name' => 'Service -' . $sid,
        'field_title' => $sid . ' - ' . $org->title->value . ' ' . $webform->label(),
        'field_operation' => t('added'),
        'field_workflow_action' => t('rejected'),
      ]);
      $notification_storage->save();

      // Staff - Add Service Rejected By Focal Point.
      $notification_storage = \Drupal::entityTypeManager()->getStorage('notification_entity')->create([
        'field_behavior' => 'info',
        'field_domain' => $active_domain->id(),
        'field_entity_id' => $sid,
        'field_entity_type' => 'service',
        'field_event_id' => 'staff__add_edit_service_approved_rejected_by_focal_point',
        'field_location' => $last_non_empty_value,
        'field_organisation' => $values['organisation'] ?? '',
        'field_priority' => 0,
        'field_processed' => FALSE,
        'field_redirect_url' => '',
        'field_role' => 'service_provider_staff',
        'field_root_location' => $values['location']['location_options'] ?? '',
        'field_specific_user' => TRUE,
        'field_users_list' => $webform_submission->getOwner(),
        'field_excluded_users' => NULL,
        'status' => 1,
        'created' => $ctime,
        'changed' => $ctime,
        'name' => 'Service -' . $sid,
        'field_title' => $sid . ' - ' . $org->title->value . ' ' . $webform->label(),
        'field_operation' => t('added'),
        'field_workflow_action' => t('rejected'),
      ]);
      $notification_storage->save();
    }

    // Notify all GBV Co, execpt who taken the action.
    // Notify the status to the owner of the service.
    if ($erpw_workflow['transition'] == 'approve') {

      // Staff - Add Service Approved By GBV Coordination.
      $notification_storage = \Drupal::entityTypeManager()->getStorage('notification_entity')->create([
        'field_behavior' => 'info',
        'field_domain' => $active_domain->id(),
        'field_entity_id' => $sid,
        'field_entity_type' => 'service',
        'field_event_id' => 'staff__add_edit_service_approved_rejected_by_gbv_coordination',
        'field_location' => $last_non_empty_value,
        'field_organisation' => $values['organisation'] ?? '',
        'field_priority' => 0,
        'field_processed' => FALSE,
        'field_redirect_url' => '',
        'field_role' => 'service_provider_staff',
        'field_root_location' => $values['location']['location_options'] ?? '',
        'field_specific_user' => TRUE,
        'field_users_list' => $webform_submission->getOwner(),
        'field_excluded_users' => NULL,
        'status' => 1,
        'created' => $ctime,
        'changed' => $ctime,
        'name' => 'Service -' . $sid,
        'field_title' => $sid . ' - ' . $org->title->value . ' ' . $webform->label(),
        'field_operation' => t('added'),
        'field_workflow_action' => t('approved'),
      ]);
      $notification_storage->save();

      // Focal Point - Added Service Approved By GBV Coordination.
      $notification_storage = \Drupal::entityTypeManager()->getStorage('notification_entity')->create([
        'field_behavior' => 'info',
        'field_domain' => $active_domain->id(),
        'field_entity_id' => $sid,
        'field_entity_type' => 'service',
        'field_event_id' => 'focal_point__service_added_edited_deleted__approved_rejected_by_gbv_coordination',
        'field_location' => $last_non_empty_value,
        'field_organisation' => $values['organisation'] ?? '',
        'field_priority' => 0,
        'field_processed' => FALSE,
        'field_redirect_url' => '',
        'field_role' => 'service_provider_focal_point',
        'field_root_location' => $values['location']['location_options'] ?? '',
        'field_specific_user' => TRUE,
      // Double check this is the last edited FP.
        'field_users_list' => $values['changed_user'],
        'field_excluded_users' => NULL,
        'status' => 1,
        'created' => $ctime,
        'changed' => $ctime,
        'name' => 'Service -' . $sid,
        'field_title' => $sid . ' - ' . $org->title->value . ' ' . $webform->label(),
        'field_operation' => t('added'),
        'field_workflow_action' => t('approved'),
      ]);
      $notification_storage->save();

      // GBV Coordination - Service Added - Approved by GBV Coordination.
      $notification_storage = \Drupal::entityTypeManager()->getStorage('notification_entity')->create([
        'field_behavior' => 'info',
        'field_domain' => $active_domain->id(),
        'field_entity_id' => $sid,
        'field_entity_type' => 'service',
        'field_event_id' => 'gbv_coordination__service_added_edited_deleted__approved_rejected_by_gbv_coordination',
        'field_location' => $last_non_empty_value,
        'field_organisation' => $values['organisation'] ?? '',
        'field_priority' => 0,
        'field_processed' => FALSE,
        'field_redirect_url' => '',
        'field_role' => ['country_admin', 'interagency_gbv_coordinator'],
        'field_root_location' => $values['location']['location_options'] ?? '',
        'field_specific_user' => TRUE,
        'field_users_list' => NULL,
        'field_excluded_users' => \Drupal::currentUser()->id(),
        'status' => 1,
        'created' => $ctime,
        'changed' => $ctime,
        'name' => 'Service -' . $sid,
        'field_title' => $sid . ' - ' . $org->title->value . ' ' . $webform->label(),
        'field_operation' => t('added'),
        'field_workflow_action' => t('approved'),
      ]);
      $notification_storage->save();

    }

    // Notify all GBV Co, execpt who taken the action.
    // Notify the status to the owner of the service.
    if ($erpw_workflow['transition'] == 'reject') {

      // Staff - Add Service Rejected By GBV Coordination.
      $notification_storage = \Drupal::entityTypeManager()->getStorage('notification_entity')->create([
        'field_behavior' => 'info',
        'field_domain' => $active_domain->id(),
        'field_entity_id' => $sid,
        'field_entity_type' => 'service',
        'field_event_id' => 'staff__add_edit_service_approved_rejected_by_gbv_coordination',
        'field_location' => $last_non_empty_value,
        'field_organisation' => $values['organisation'] ?? '',
        'field_priority' => 0,
        'field_processed' => FALSE,
        'field_redirect_url' => '',
        'field_role' => 'service_provider_staff',
        'field_root_location' => $values['location']['location_options'] ?? '',
        'field_specific_user' => TRUE,
        'field_users_list' => $webform_submission->getOwner(),
        'field_excluded_users' => NULL,
        'status' => 1,
        'created' => $ctime,
        'changed' => $ctime,
        'name' => 'Service -' . $sid,
        'field_title' => $sid . ' - ' . $org->title->value . ' ' . $webform->label(),
        'field_operation' => t('added'),
        'field_workflow_action' => t('rejected'),
      ]);
      $notification_storage->save();

      // Focal Point - Added Service Rejected By GBV Coordination.
      $notification_storage = \Drupal::entityTypeManager()->getStorage('notification_entity')->create([
        'field_behavior' => 'info',
        'field_domain' => $active_domain->id(),
        'field_entity_id' => $sid,
        'field_entity_type' => 'service',
        'field_event_id' => 'focal_point__service_added_edited_deleted__approved_rejected_by_gbv_coordination',
        'field_location' => $last_non_empty_value,
        'field_organisation' => $values['organisation'] ?? '',
        'field_priority' => 0,
        'field_processed' => FALSE,
        'field_redirect_url' => '',
        'field_role' => 'service_provider_focal_point',
        'field_root_location' => $values['location']['location_options'] ?? '',
        'field_specific_user' => TRUE,
      // Double check this is the last edited FP.
        'field_users_list' => $values['changed_user'],
        'field_excluded_users' => NULL,
        'status' => 1,
        'created' => $ctime,
        'changed' => $ctime,
        'name' => 'Service -' . $sid,
        'field_title' => $sid . ' - ' . $org->title->value . ' ' . $webform->label(),
        'field_operation' => t('added'),
        'field_workflow_action' => t('rejected'),
      ]);
      $notification_storage->save();

      // GBV Coordination - Service Added - Rejected by GBV Coordination.
      $notification_storage = \Drupal::entityTypeManager()->getStorage('notification_entity')->create([
        'field_behavior' => 'info',
        'field_domain' => $active_domain->id(),
        'field_entity_id' => $sid,
        'field_entity_type' => 'service',
        'field_event_id' => 'gbv_coordination__service_added_edited_deleted__approved_rejected_by_gbv_coordination',
        'field_location' => $last_non_empty_value,
        'field_organisation' => $values['organisation'] ?? '',
        'field_priority' => 0,
        'field_processed' => FALSE,
        'field_redirect_url' => '',
        'field_role' => ['country_admin', 'interagency_gbv_coordinator'],
        'field_root_location' => $values['location']['location_options'] ?? '',
        'field_specific_user' => TRUE,
        'field_users_list' => NULL,
        'field_excluded_users' => \Drupal::currentUser()->id(),
        'status' => 1,
        'created' => $ctime,
        'changed' => $ctime,
        'name' => 'Service -' . $sid,
        'field_title' => $sid . ' - ' . $org->title->value . ' ' . $webform->label(),
        'field_operation' => t('added'),
        'field_workflow_action' => t('rejected'),
      ]);
      $notification_storage->save();

    }

    /**
     * Staff Service Add flow ended here.
     */
  }

  // Focal Point owned services, Add flow.
  if (in_array('service_provider_focal_point', $ownerroles)) {
    /**
     * Focal Point Add flow start here.
     */
    if ($erpw_workflow['transition'] == 'submit_for_review_to_country_admin') {
      // GBV Coordination - Service Added - Review.
      $notification_storage = \Drupal::entityTypeManager()->getStorage('notification_entity')->create([
        'field_behavior' => 'link',
        'field_domain' => $active_domain->id(),
        'field_entity_id' => $sid,
        'field_entity_type' => 'service',
        'field_event_id' => 'gbv_coordination__service_added_edited_deleted__review',
        'field_location' => $last_non_empty_value,
        'field_organisation' => $values['organisation'] ?? '',
        'field_priority' => 1,
        'field_processed' => FALSE,
        'field_redirect_url' => Url::fromRoute('erpw_webform.service_moderate_content', ['webform_submission' => $sid], [])->toString(),
        'field_role' => ['interagency_gbv_coordinator', 'country_admin'],
        'field_root_location' => $values['location']['location_options'] ?? '',
        'field_specific_user' => FALSE,
        'field_users_list' => NULL,
        'field_excluded_users' => NULL,
        'status' => 1,
        'created' => $ctime,
        'changed' => $ctime,
        'name' => 'Service -' . $sid,
        'field_title' => $sid . ' - ' . $org->title->value . ' ' . $webform->label(),
        'field_operation' => t('added'),
        'field_workflow_action' => '',
      ]);
      $notification_storage->save();
    }

    if ($erpw_workflow['transition'] == 'approve') {
      // GBV Coordination - Service Added - Approved by GBV Coordination.
      $notification_storage = \Drupal::entityTypeManager()->getStorage('notification_entity')->create([
        'field_behavior' => 'info',
        'field_domain' => $active_domain->id(),
        'field_entity_id' => $sid,
        'field_entity_type' => 'service',
        'field_event_id' => 'gbv_coordination__service_added_edited_deleted__approved_rejected_by_gbv_coordination',
        'field_location' => $last_non_empty_value,
        'field_organisation' => $values['organisation'] ?? '',
        'field_priority' => 0,
        'field_processed' => FALSE,
        'field_redirect_url' => '',
        'field_role' => ['country_admin', 'interagency_gbv_coordinator'],
        'field_root_location' => $values['location']['location_options'] ?? '',
        'field_specific_user' => TRUE,
        'field_users_list' => NULL,
        'field_excluded_users' => \Drupal::currentUser()->id(),
        'status' => 1,
        'created' => $ctime,
        'changed' => $ctime,
        'name' => 'Service -' . $sid,
        'field_title' => $sid . ' - ' . $org->title->value . ' ' . $webform->label(),
        'field_operation' => t('added'),
        'field_workflow_action' => t('approved'),
      ]);
      $notification_storage->save();

      // Focal Point - Added Service Approved By GBV Coordination.
      $notification_storage = \Drupal::entityTypeManager()->getStorage('notification_entity')->create([
        'field_behavior' => 'info',
        'field_domain' => $active_domain->id(),
        'field_entity_id' => $sid,
        'field_entity_type' => 'service',
        'field_event_id' => 'focal_point__service_added_edited_deleted__approved_rejected_by_gbv_coordination',
        'field_location' => $last_non_empty_value,
        'field_organisation' => $values['organisation'] ?? '',
        'field_priority' => 0,
        'field_processed' => FALSE,
        'field_redirect_url' => '',
        'field_role' => 'service_provider_focal_point',
        'field_root_location' => $values['location']['location_options'] ?? '',
        'field_specific_user' => TRUE,
      // Double check this is the last edited FP.
        'field_users_list' => $webform_submission->getOwner(),
        'field_excluded_users' => NULL,
        'status' => 1,
        'created' => $ctime,
        'changed' => $ctime,
        'name' => 'Service -' . $sid,
        'field_title' => $sid . ' - ' . $org->title->value . ' ' . $webform->label(),
        'field_operation' => t('added'),
        'field_workflow_action' => t('approved'),
      ]);
      $notification_storage->save();
    }

    if ($erpw_workflow['transition'] == 'reject') {
      // Focal Point - Added Service Rejected By GBV Coordination.
      $notification_storage = \Drupal::entityTypeManager()->getStorage('notification_entity')->create([
        'field_behavior' => 'info',
        'field_domain' => $active_domain->id(),
        'field_entity_id' => $sid,
        'field_entity_type' => 'service',
        'field_event_id' => 'focal_point__service_added_edited_deleted__approved_rejected_by_gbv_coordination',
        'field_location' => $last_non_empty_value,
        'field_organisation' => $values['organisation'] ?? '',
        'field_priority' => 0,
        'field_processed' => FALSE,
        'field_redirect_url' => '',
        'field_role' => 'service_provider_focal_point',
        'field_root_location' => $values['location']['location_options'] ?? '',
        'field_specific_user' => TRUE,
      // Double check this is the last edited FP.
        'field_users_list' => $webform_submission->getOwner(),
        'field_excluded_users' => NULL,
        'status' => 1,
        'created' => $ctime,
        'changed' => $ctime,
        'name' => 'Service -' . $sid,
        'field_title' => $sid . ' - ' . $org->title->value . ' ' . $webform->label(),
        'field_operation' => t('added'),
        'field_workflow_action' => t('rejected'),
      ]);
      $notification_storage->save();

      // GBV Coordination - Service Added - Rejected by GBV Coordination.
      $notification_storage = \Drupal::entityTypeManager()->getStorage('notification_entity')->create([
        'field_behavior' => 'info',
        'field_domain' => $active_domain->id(),
        'field_entity_id' => $sid,
        'field_entity_type' => 'service',
        'field_event_id' => 'gbv_coordination__service_added_edited_deleted__approved_rejected_by_gbv_coordination',
        'field_location' => $last_non_empty_value,
        'field_organisation' => $values['organisation'] ?? '',
        'field_priority' => 0,
        'field_processed' => FALSE,
        'field_redirect_url' => '',
        'field_role' => ['country_admin', 'interagency_gbv_coordinator'],
        'field_root_location' => $values['location']['location_options'] ?? '',
        'field_specific_user' => TRUE,
        'field_users_list' => NULL,
        'field_excluded_users' => \Drupal::currentUser()->id(),
        'status' => 1,
        'created' => $ctime,
        'changed' => $ctime,
        'name' => 'Service -' . $sid,
        'field_title' => $sid . ' - ' . $org->title->value . ' ' . $webform->label(),
        'field_operation' => t('added'),
        'field_workflow_action' => t('rejected'),
      ]);
      $notification_storage->save();

    }
    /**
     * Focal Point Add flow ends here.
     */

  }

  // Global Edit and Delete.
  /**
   * Service Edit flow started here.
   */
  if ($erpw_workflow['transition'] == 'submit_edits_to_focal_point') {
    // Focal Point - Service Edit - Review.
    $notification_storage = \Drupal::entityTypeManager()->getStorage('notification_entity')->create([
      'field_behavior' => 'link',
      'field_domain' => $active_domain->id(),
      'field_entity_id' => $sid,
      'field_entity_type' => 'service',
      'field_event_id' => 'focal_point__service_added_edited_delete__review',
      'field_location' => $last_non_empty_value,
      'field_organisation' => $values['organisation'] ?? '',
      'field_priority' => 1,
      'field_processed' => FALSE,
      'field_redirect_url' => Url::fromRoute('erpw_webform.service_moderate_content', ['webform_submission' => $sid], [])->toString(),
      'field_role' => 'service_provider_focal_point',
      'field_root_location' => $values['location']['location_options'] ?? '',
      'field_specific_user' => FALSE,
      'field_users_list' => NULL,
      'field_excluded_users' => NULL,
      'status' => 1,
      'created' => $ctime,
      'changed' => $ctime,
      'name' => 'Service -' . $sid,
      'field_title' => $sid . ' ' . $org->title->value . ' ' . $webform->label(),
      'field_operation' => t('edited'),
      'field_workflow_action' => '',
    ]);
    $notification_storage->save();
  }

  // Edit Approved by focal point.
  if ($erpw_workflow['transition'] == 'submit_edits_to_gbv_coordination') {
    // Focal Point - Service Edited - Approved by Focal Point.
    $notification_storage = \Drupal::entityTypeManager()->getStorage('notification_entity')->create([
      'field_behavior' => 'info',
      'field_domain' => $active_domain->id(),
      'field_entity_id' => $sid,
      'field_entity_type' => 'service',
      'field_event_id' => 'focal_point__service_added_edited_deleted__approved_rejected_by_focal_point',
      'field_location' => $last_non_empty_value,
      'field_organisation' => $values['organisation'] ?? '',
      'field_priority' => 0,
      'field_processed' => FALSE,
      'field_redirect_url' => '',
      'field_role' => 'service_provider_focal_point',
      'field_root_location' => $values['location']['location_options'] ?? '',
      'field_specific_user' => TRUE,
      'field_users_list' => NULL,
      'field_excluded_users' => \Drupal::currentUser()->id(),
      'status' => 1,
      'created' => $ctime,
      'changed' => $ctime,
      'name' => 'Service -' . $sid,
      'field_title' => $sid . ' ' . $org->title->value . ' ' . $webform->label(),
      'field_operation' => t('edited'),
      'field_workflow_action' => t('approved'),
    ]);
    $notification_storage->save();

    // Staff - edited Service Approved By Focal Point.
    $notification_storage = \Drupal::entityTypeManager()->getStorage('notification_entity')->create([
      'field_behavior' => 'info',
      'field_domain' => $active_domain->id(),
      'field_entity_id' => $sid,
      'field_entity_type' => 'service',
      'field_event_id' => 'staff__add_edit_service_approved_rejected_by_focal_point',
      'field_location' => $last_non_empty_value,
      'field_organisation' => $values['organisation'] ?? '',
      'field_priority' => 0,
      'field_processed' => FALSE,
      'field_redirect_url' => '',
      'field_role' => 'service_provider_staff',
      'field_root_location' => $values['location']['location_options'] ?? '',
      'field_specific_user' => TRUE,
      'field_users_list' => $values['changed_user'],
      'field_excluded_users' => NULL,
      'status' => 1,
      'created' => $ctime,
      'changed' => $ctime,
      'name' => 'Service -' . $sid,
      'field_title' => $sid . ' ' . $org->title->value . ' ' . $webform->label(),
      'field_operation' => t('edited'),
      'field_workflow_action' => t('approved'),
    ]);
    $notification_storage->save();

    // GBV Coordination - Service Edited - Review.
    $notification_storage = \Drupal::entityTypeManager()->getStorage('notification_entity')->create([
      'field_behavior' => 'link',
      'field_domain' => $active_domain->id(),
      'field_entity_id' => $sid,
      'field_entity_type' => 'service',
      'field_event_id' => 'gbv_coordination__service_added_edited_deleted__review',
      'field_location' => $last_non_empty_value,
      'field_organisation' => $values['organisation'] ?? '',
      'field_priority' => 1,
      'field_processed' => FALSE,
      'field_redirect_url' => Url::fromRoute('erpw_webform.service_moderate_content', ['webform_submission' => $sid], [])->toString(),
      'field_role' => ['interagency_gbv_coordinator', 'country_admin'],
      'field_root_location' => $values['location']['location_options'] ?? '',
      'field_specific_user' => FALSE,
      'field_users_list' => NULL,
      'field_excluded_users' => NULL,
      'status' => 1,
      'created' => $ctime,
      'changed' => $ctime,
      'name' => 'Service -' . $sid,
      'field_title' => $sid . ' ' . $org->title->value . ' ' . $webform->label(),
      'field_operation' => t('edited'),
      'field_workflow_action' => '',
    ]);
    $notification_storage->save();
  }

  // Edit Rejected by Focal Point.
  if ($erpw_workflow['transition'] == 'edits_rejected_by_focal_point') {
    // Focal Point - Service Edited - Rejected by Focal Point.
    $notification_storage = \Drupal::entityTypeManager()->getStorage('notification_entity')->create([
      'field_behavior' => 'info',
      'field_domain' => $active_domain->id(),
      'field_entity_id' => $sid,
      'field_entity_type' => 'service',
      'field_event_id' => 'focal_point__service_added_edited_deleted__approved_rejected_by_focal_point',
      'field_location' => $last_non_empty_value,
      'field_organisation' => $values['organisation'] ?? '',
      'field_priority' => 0,
      'field_processed' => FALSE,
      'field_redirect_url' => '',
      'field_role' => 'service_provider_focal_point',
      'field_root_location' => $values['location']['location_options'] ?? '',
      'field_specific_user' => TRUE,
      'field_users_list' => NULL,
      'field_excluded_users' => \Drupal::currentUser()->id(),
      'status' => 1,
      'created' => $ctime,
      'changed' => $ctime,
      'name' => 'Service -' . $sid,
      'field_title' => $sid . ' ' . $org->title->value . ' ' . $webform->label(),
      'field_operation' => t('edited'),
      'field_workflow_action' => t('rejected'),
    ]);
    $notification_storage->save();

    // Staff - Edit Service Rejected By Focal Point.
    $notification_storage = \Drupal::entityTypeManager()->getStorage('notification_entity')->create([
      'field_behavior' => 'info',
      'field_domain' => $active_domain->id(),
      'field_entity_id' => $sid,
      'field_entity_type' => 'service',
      'field_event_id' => 'staff__add_edit_service_approved_rejected_by_focal_point',
      'field_location' => $last_non_empty_value,
      'field_organisation' => $values['organisation'] ?? '',
      'field_priority' => 0,
      'field_processed' => FALSE,
      'field_redirect_url' => '',
      'field_role' => 'service_provider_staff',
      'field_root_location' => $values['location']['location_options'] ?? '',
      'field_specific_user' => TRUE,
      'field_users_list' => $values['changed_user'],
      'field_excluded_users' => NULL,
      'status' => 1,
      'created' => $ctime,
      'changed' => $ctime,
      'name' => 'Service -' . $sid,
      'field_title' => $sid . ' ' . $org->title->value . ' ' . $webform->label(),
      'field_operation' => t('edited'),
      'field_workflow_action' => t('rejected'),
    ]);
    $notification_storage->save();
  }

  // Edit approved by GBV Coordination.
  if ($erpw_workflow['transition'] == 'publish_edits') {

    // @todo Need user id of who edit the service.
    // Focal Point - Edited Service Approved By GBV Coordination.
    $notification_storage = \Drupal::entityTypeManager()->getStorage('notification_entity')->create([
      'field_behavior' => 'info',
      'field_domain' => $active_domain->id(),
      'field_entity_id' => $sid,
      'field_entity_type' => 'service',
      'field_event_id' => 'focal_point__service_added_edited_deleted__approved_rejected_by_gbv_coordination',
      'field_location' => $last_non_empty_value,
      'field_organisation' => $values['organisation'] ?? '',
      'field_priority' => 0,
      'field_processed' => FALSE,
      'field_redirect_url' => '',
      'field_role' => 'service_provider_focal_point',
      'field_root_location' => $values['location']['location_options'] ?? '',
      'field_specific_user' => TRUE,
    // Double check this is the last edited FP.
      'field_users_list' => $values['changed_user'],
      'field_excluded_users' => NULL,
      'status' => 1,
      'created' => $ctime,
      'changed' => $ctime,
      'name' => 'Service -' . $sid,
      'field_title' => $sid . ' ' . $org->title->value . ' ' . $webform->label(),
      'field_operation' => t('edited'),
      'field_workflow_action' => t('approved'),
    ]);
    $notification_storage->save();

    // GBV Coordination - Service Edited - Approved by GBV Coordination.
    $notification_storage = \Drupal::entityTypeManager()->getStorage('notification_entity')->create([
      'field_behavior' => 'info',
      'field_domain' => $active_domain->id(),
      'field_entity_id' => $sid,
      'field_entity_type' => 'service',
      'field_event_id' => 'gbv_coordination__service_added_edited_deleted__approved_rejected_by_gbv_coordination',
      'field_location' => $last_non_empty_value,
      'field_organisation' => $values['organisation'] ?? '',
      'field_priority' => 0,
      'field_processed' => FALSE,
      'field_redirect_url' => '',
      'field_role' => ['country_admin', 'interagency_gbv_coordinator'],
      'field_root_location' => $values['location']['location_options'] ?? '',
      'field_specific_user' => TRUE,
      'field_users_list' => NULL,
      'field_excluded_users' => \Drupal::currentUser()->id(),
      'status' => 1,
      'created' => $ctime,
      'changed' => $ctime,
      'name' => 'Service -' . $sid,
      'field_title' => $sid . ' ' . $org->title->value . ' ' . $webform->label(),
      'field_operation' => t('edited'),
      'field_workflow_action' => t('approved'),
    ]);
    $notification_storage->save();
  }

  // Edit rejected by GBV Coordination.
  if ($erpw_workflow['transition'] == 'edits_rejected_by_gbv_coordination') {

    // @todo Need user id of who edit the service.
    // Focal Point - Edit Service Rejected By GBV Coordination.
    $notification_storage = \Drupal::entityTypeManager()->getStorage('notification_entity')->create([
      'field_behavior' => 'info',
      'field_domain' => $active_domain->id(),
      'field_entity_id' => $sid,
      'field_entity_type' => 'service',
      'field_event_id' => 'focal_point__service_added_edited_deleted__approved_rejected_by_gbv_coordination',
      'field_location' => $last_non_empty_value,
      'field_organisation' => $values['organisation'] ?? '',
      'field_priority' => 0,
      'field_processed' => FALSE,
      'field_redirect_url' => '',
      'field_role' => 'service_provider_focal_point',
      'field_root_location' => $values['location']['location_options'] ?? '',
      'field_specific_user' => TRUE,
    // Double check this is the last edited FP.
      'field_users_list' => $values['changed_user'],
      'field_excluded_users' => NULL,
      'status' => 1,
      'created' => $ctime,
      'changed' => $ctime,
      'name' => 'Service -' . $sid,
      'field_title' => $sid . ' ' . $org->title->value . ' ' . $webform->label(),
      'field_operation' => t('edited'),
      'field_workflow_action' => t('rejected'),
    ]);
    $notification_storage->save();

    // GBV Coordination - Service Edited - Rejected by GBV Coordination.
    $notification_storage = \Drupal::entityTypeManager()->getStorage('notification_entity')->create([
      'field_behavior' => 'info',
      'field_domain' => $active_domain->id(),
      'field_entity_id' => $sid,
      'field_entity_type' => 'service',
      'field_event_id' => 'gbv_coordination__service_added_edited_deleted__approved_rejected_by_gbv_coordination',
      'field_location' => $last_non_empty_value,
      'field_organisation' => $values['organisation'] ?? '',
      'field_priority' => 0,
      'field_processed' => FALSE,
      'field_redirect_url' => '',
      'field_role' => ['country_admin', 'interagency_gbv_coordinator'],
      'field_root_location' => $values['location']['location_options'] ?? '',
      'field_specific_user' => TRUE,
      'field_users_list' => NULL,
      'field_excluded_users' => \Drupal::currentUser()->id(),
      'status' => 1,
      'created' => $ctime,
      'changed' => $ctime,
      'name' => 'Service -' . $sid,
      'field_title' => $sid . ' ' . $org->title->value . ' ' . $webform->label(),
      'field_operation' => t('edited'),
      'field_workflow_action' => t('rejected'),
    ]);
    $notification_storage->save();
  }
  /**
   * Service Edit flow ended here.
   */

  /**
   * Service Delete flow start here.
   */
  if ($erpw_workflow['transition'] == 'submit_for_deletion_to_focal_point') {
    // Focal Point - Service Delete - Review.
    $notification_storage = \Drupal::entityTypeManager()->getStorage('notification_entity')->create([
      'field_behavior' => 'link',
      'field_domain' => $active_domain->id(),
      'field_entity_id' => $sid,
      'field_entity_type' => 'service',
      'field_event_id' => 'focal_point__service_added_edited_delete__review',
      'field_location' => $last_non_empty_value,
      'field_organisation' => $values['organisation'] ?? '',
      'field_priority' => 1,
      'field_processed' => FALSE,
      'field_redirect_url' => Url::fromRoute('erpw_webform.service_moderate_content', ['webform_submission' => $sid], [])->toString(),
      'field_role' => 'service_provider_focal_point',
      'field_root_location' => $values['location']['location_options'] ?? '',
      'field_specific_user' => FALSE,
      'field_users_list' => NULL,
      'field_excluded_users' => NULL,
      'status' => 1,
      'created' => $ctime,
      'changed' => $ctime,
      'name' => 'Service -' . $sid,
      'field_title' => $sid . ' ' . $org->title->value . ' ' . $webform->label(),
      'field_operation' => t('deleted'),
      'field_workflow_action' => '',
    ]);
    $notification_storage->save();
  }

  // Deletion Rejected by focal point.
  if ($erpw_workflow['transition'] == 'deletion_rejected_by_focal_point') {

    // Focal Point - Service Deleted - Rejected by Focal Point.
    $notification_storage = \Drupal::entityTypeManager()->getStorage('notification_entity')->create([
      'field_behavior' => 'info',
      'field_domain' => $active_domain->id(),
      'field_entity_id' => $sid,
      'field_entity_type' => 'service',
      'field_event_id' => 'focal_point__service_added_edited_deleted__approved_rejected_by_focal_point',
      'field_location' => $last_non_empty_value,
      'field_organisation' => $values['organisation'] ?? '',
      'field_priority' => 0,
      'field_processed' => FALSE,
      'field_redirect_url' => '',
      'field_role' => 'service_provider_focal_point',
      'field_root_location' => $values['location']['location_options'] ?? '',
      'field_specific_user' => TRUE,
      'field_users_list' => NULL,
      'field_excluded_users' => \Drupal::currentUser()->id(),
      'status' => 1,
      'created' => $ctime,
      'changed' => $ctime,
      'name' => 'Service -' . $sid,
      'field_title' => $sid . ' ' . $org->title->value . ' ' . $webform->label(),
      'field_operation' => t('deleted'),
      'field_workflow_action' => t('rejected'),
    ]);
    $notification_storage->save();

    // Staff - Delete Service Rejected By Focal Point.
    $notification_storage = \Drupal::entityTypeManager()->getStorage('notification_entity')->create([
      'field_behavior' => 'info',
      'field_domain' => $active_domain->id(),
      'field_entity_id' => $sid,
      'field_entity_type' => 'service',
      'field_event_id' => 'staff__delete_service_approved_rejected_by_focal_point',
      'field_location' => $last_non_empty_value,
      'field_organisation' => $values['organisation'] ?? '',
      'field_priority' => 0,
      'field_processed' => FALSE,
      'field_redirect_url' => '',
      'field_role' => 'service_provider_staff',
      'field_root_location' => $values['location']['location_options'] ?? '',
      'field_specific_user' => TRUE,
      'field_users_list' => $values['changed_user'],
      'field_excluded_users' => NULL,
      'status' => 1,
      'created' => $ctime,
      'changed' => $ctime,
      'name' => 'Service -' . $sid,
      'field_title' => $sid . ' ' . $org->title->value . ' ' . $webform->label(),
      'field_operation' => t('deletion'),
      'field_workflow_action' => t('rejected'),
    ]);
    $notification_storage->save();
  }

  // Deletion approved by focal point.
  if ($erpw_workflow['transition'] == 'submit_for_deletion_to_gbv_coordination') {
    // Focal Point - Service Deleted - Approved by Focal Point.
    $notification_storage = \Drupal::entityTypeManager()->getStorage('notification_entity')->create([
      'field_behavior' => 'info',
      'field_domain' => $active_domain->id(),
      'field_entity_id' => $sid,
      'field_entity_type' => 'service',
      'field_event_id' => 'focal_point__service_added_edited_deleted__approved_rejected_by_focal_point',
      'field_location' => $last_non_empty_value,
      'field_organisation' => $values['organisation'] ?? '',
      'field_priority' => 0,
      'field_processed' => FALSE,
      'field_redirect_url' => '',
      'field_role' => 'service_provider_focal_point',
      'field_root_location' => $values['location']['location_options'] ?? '',
      'field_specific_user' => TRUE,
      'field_users_list' => NULL,
      'field_excluded_users' => \Drupal::currentUser()->id(),
      'status' => 1,
      'created' => $ctime,
      'changed' => $ctime,
      'name' => 'Service -' . $sid,
      'field_title' => $sid . ' ' . $org->title->value . ' ' . $webform->label(),
      'field_operation' => t('deleted'),
      'field_workflow_action' => t('approved'),
    ]);
    $notification_storage->save();

    // Staff - Delete Service Approved By Focal Point.
    $notification_storage = \Drupal::entityTypeManager()->getStorage('notification_entity')->create([
      'field_behavior' => 'info',
      'field_domain' => $active_domain->id(),
      'field_entity_id' => $sid,
      'field_entity_type' => 'service',
      'field_event_id' => 'staff__delete_service_approved_rejected_by_focal_point',
      'field_location' => $last_non_empty_value,
      'field_organisation' => $values['organisation'] ?? '',
      'field_priority' => 0,
      'field_processed' => FALSE,
      'field_redirect_url' => '',
      'field_role' => 'service_provider_staff',
      'field_root_location' => $values['location']['location_options'] ?? '',
      'field_specific_user' => TRUE,
      'field_users_list' => $values['changed_user'],
      'field_excluded_users' => NULL,
      'status' => 1,
      'created' => $ctime,
      'changed' => $ctime,
      'name' => 'Service -' . $sid,
      'field_title' => $sid . ' ' . $org->title->value . ' ' . $webform->label(),
      'field_operation' => t('deletion'),
      'field_workflow_action' => t('approved'),
    ]);
    $notification_storage->save();

    // GBV Coordination - Service Delete - Review.
    $notification_storage = \Drupal::entityTypeManager()->getStorage('notification_entity')->create([
      'field_behavior' => 'link',
      'field_domain' => $active_domain->id(),
      'field_entity_id' => $sid,
      'field_entity_type' => 'service',
      'field_event_id' => 'gbv_coordination__service_added_edited_deleted__review',
      'field_location' => $last_non_empty_value,
      'field_organisation' => $values['organisation'] ?? '',
      'field_priority' => 1,
      'field_processed' => FALSE,
      'field_redirect_url' => Url::fromRoute('erpw_webform.service_moderate_content', ['webform_submission' => $sid], [])->toString(),
      'field_role' => ['interagency_gbv_coordinator', 'country_admin'],
      'field_root_location' => $values['location']['location_options'] ?? '',
      'field_specific_user' => FALSE,
      'field_users_list' => NULL,
      'field_excluded_users' => NULL,
      'status' => 1,
      'created' => $ctime,
      'changed' => $ctime,
      'name' => 'Service -' . $sid,
      'field_title' => $sid . ' ' . $org->title->value . ' ' . $webform->label(),
      'field_operation' => t('deleted'),
      'field_workflow_action' => '',
    ]);
    $notification_storage->save();

  }

  // Deletion rejected by GBV Coordination.
  if ($erpw_workflow['transition'] == 'deletion_rejected_by_gbv_coordination') {

    // @todo Need user id of who edit the service.
    // Focal Point - Delete Service Rejected By GBV Coordination.
    $notification_storage = \Drupal::entityTypeManager()->getStorage('notification_entity')->create([
      'field_behavior' => 'info',
      'field_domain' => $active_domain->id(),
      'field_entity_id' => $sid,
      'field_entity_type' => 'service',
      'field_event_id' => 'focal_point__service_added_edited_deleted__approved_rejected_by_gbv_coordination',
      'field_location' => $last_non_empty_value,
      'field_organisation' => $values['organisation'] ?? '',
      'field_priority' => 0,
      'field_processed' => FALSE,
      'field_redirect_url' => '',
      'field_role' => 'service_provider_focal_point',
      'field_root_location' => $values['location']['location_options'] ?? '',
      'field_specific_user' => TRUE,
    // Double check this is the last edited FP.
      'field_users_list' => $values['changed_user'],
      'field_excluded_users' => NULL,
      'status' => 1,
      'created' => $ctime,
      'changed' => $ctime,
      'name' => 'Service -' . $sid,
      'field_title' => $sid . ' ' . $org->title->value . ' ' . $webform->label(),
      'field_operation' => t('deleted'),
      'field_workflow_action' => t('rejected'),
    ]);
    $notification_storage->save();

    // GBV Coordination - Service Deleted - Rejected by GBV Coordination.
    $notification_storage = \Drupal::entityTypeManager()->getStorage('notification_entity')->create([
      'field_behavior' => 'info',
      'field_domain' => $active_domain->id(),
      'field_entity_id' => $sid,
      'field_entity_type' => 'service',
      'field_event_id' => 'gbv_coordination__service_added_edited_deleted__approved_rejected_by_gbv_coordination',
      'field_location' => $last_non_empty_value,
      'field_organisation' => $values['organisation'] ?? '',
      'field_priority' => 0,
      'field_processed' => FALSE,
      'field_redirect_url' => '',
      'field_role' => ['country_admin', 'interagency_gbv_coordinator'],
      'field_root_location' => $values['location']['location_options'] ?? '',
      'field_specific_user' => TRUE,
      'field_users_list' => NULL,
      'field_excluded_users' => \Drupal::currentUser()->id(),
      'status' => 1,
      'created' => $ctime,
      'changed' => $ctime,
      'name' => 'Service -' . $sid,
      'field_title' => $sid . ' ' . $org->title->value . ' ' . $webform->label(),
      'field_operation' => t('deleted'),
      'field_workflow_action' => t('rejected'),
    ]);
    $notification_storage->save();
  }

  // Deletion approved by GBV Coordination.
  if ($erpw_workflow['transition'] == 'approve_deletion') {

    // @todo Need user id of who edit the service.
    // Focal Point - Deleted Service Approved By GBV Coordination.
    $notification_storage = \Drupal::entityTypeManager()->getStorage('notification_entity')->create([
      'field_behavior' => 'info',
      'field_domain' => $active_domain->id(),
      'field_entity_id' => $sid,
      'field_entity_type' => 'service',
      'field_event_id' => 'focal_point__service_added_edited_deleted__approved_rejected_by_gbv_coordination',
      'field_location' => $last_non_empty_value,
      'field_organisation' => $values['organisation'] ?? '',
      'field_priority' => 0,
      'field_processed' => FALSE,
      'field_redirect_url' => '',
      'field_role' => 'service_provider_focal_point',
      'field_root_location' => $values['location']['location_options'] ?? '',
      'field_specific_user' => TRUE,
    // Double check this is the last edited FP.
      'field_users_list' => $values['changed_user'],
      'field_excluded_users' => NULL,
      'status' => 1,
      'created' => $ctime,
      'changed' => $ctime,
      'name' => 'Service -' . $sid,
      'field_title' => $sid . ' ' . $org->title->value . ' ' . $webform->label(),
      'field_operation' => t('deleted'),
      'field_workflow_action' => t('approved'),
    ]);
    $notification_storage->save();

    // GBV Coordination - Service Deleted - Approved by GBV Coordination.
    $notification_storage = \Drupal::entityTypeManager()->getStorage('notification_entity')->create([
      'field_behavior' => 'info',
      'field_domain' => $active_domain->id(),
      'field_entity_id' => $sid,
      'field_entity_type' => 'service',
      'field_event_id' => 'gbv_coordination__service_added_edited_deleted__approved_rejected_by_gbv_coordination',
      'field_location' => $last_non_empty_value,
      'field_organisation' => $values['organisation'] ?? '',
      'field_priority' => 0,
      'field_processed' => FALSE,
      'field_redirect_url' => '',
      'field_role' => ['country_admin', 'interagency_gbv_coordinator'],
      'field_root_location' => $values['location']['location_options'] ?? '',
      'field_specific_user' => TRUE,
      'field_users_list' => NULL,
      'field_excluded_users' => \Drupal::currentUser()->id(),
      'status' => 1,
      'created' => $ctime,
      'changed' => $ctime,
      'name' => 'Service -' . $sid,
      'field_title' => $sid . ' ' . $org->title->value . ' ' . $webform->label(),
      'field_operation' => t('deleted'),
      'field_workflow_action' => t('approved'),
    ]);
    $notification_storage->save();
  }
  /**
   * Service Delete flow ends here.
   */
}

/**
 * Implement ultimate_cron_callback().
 */
function erpw_in_app_notification__notification_process_cron_job() {
  $queue_factory = \Drupal::service('queue');
  /** @var QueueInterface $queue */
  $queue = $queue_factory->get('notification_process_queue_worker');
  $ids = \Drupal::service('erpw_in_app_notification.default')->getNotificationIds();
  if (!empty($ids)) {
    foreach ($ids as $id) {
      $queue->createItem($id);
    }
  }
}
