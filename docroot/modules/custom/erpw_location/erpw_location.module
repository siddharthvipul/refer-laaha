<?php

/**
 * @file
 * Contains erpw_location.module.
 */

use Drupal\taxonomy\Entity\Term;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function erpw_location_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the erpw_location module.
    case 'help.page.erpw_location':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function erpw_location_theme() {
  $theme = [];
  $theme['location'] = [
    'render element' => 'elements',
    'file' => 'location.page.inc',
    'template' => 'location',
  ];
  $theme['location_content_add_list'] = [
    'render element' => 'content',
    'variables' => ['content' => NULL],
    'file' => 'location.page.inc',
  ];
  $theme['manage_location_form'] = [
    'render element' => 'form',
    'template' => 'manage-location-form',
  ];
  $theme['homepage_user_location'] = [
    'variables' => [
      'title' => NULL,
      'description' => NULL,
      'location' => NULL,
      'tid' => NULL,
    ],
    'template' => 'homepage-user-location',
  ];
  $theme['pending_service_count'] = [
    'variables' => [
      'count' => NULL,
      'description' => NULL,
      'manage_service_link' => NULL,
    ],
    'template' => 'pending-service-count',
  ];

  return $theme;
}

/**
 * Implements hook_theme_suggestions_HOOK().
 */
function erpw_location_theme_suggestions_location(array $variables) {
  $suggestions = [];
  $entity = $variables['elements']['#location'];
  $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');

  $suggestions[] = 'location__' . $sanitized_view_mode;
  $suggestions[] = 'location__' . $entity->bundle();
  $suggestions[] = 'location__' . $entity->bundle() . '__' . $sanitized_view_mode;
  $suggestions[] = 'location__' . $entity->id();
  $suggestions[] = 'location__' . $entity->id() . '__' . $sanitized_view_mode;
  return $suggestions;
}

/**
 * Implements hook_ENTITY_TYPE_predelete().
 */
function erpw_location_entity_predelete(EntityInterface $entity) {
  $type = $entity
    ->getEntityTypeId();
  if ($type == 'location') {
    $taxonomy_term_id = $entity->get('field_location_taxonomy_term')->getValue()[0]['target_id'];
    if ($term = Term::load($taxonomy_term_id)) {
      // Delete the term itself.
      $term->delete();
    }
  }
}

/**
 * Implements hook_taxonomy_term_delete().
 */
function erpw_location_taxonomy_term_delete($term) {
  $tid = $term->id();
  $delete_query = 'DELETE from erpw_location WHERE country_tid = ' . $tid .
    ' OR level1 =' . $tid .
    ' OR level2 =' . $tid .
    ' OR level3 =' . $tid .
    ' OR level4 =' . $tid;
  $query = \Drupal::database()->query($delete_query);
  $query->execute();
}

/**
 * Batch callback to dispatch the media entity batch operation to a service.
 */
function _import_location_batch_dispatcher() {
  $args = func_get_args();
  [$service, $method] = explode(':', array_shift($args));
  // The second argument (context) is passed by reference.
  $values = $args[1];
  $args[1] = &$values;
  call_user_func_array([\Drupal::service($service), $method], $args);
}

/**
 * Load country code from location taxonomy term.
 *
 * We do this in one shot because the machine names for domains *and* domain
 * locations are both wrong but if we get the domain directly we can ignore
 * that horror.  (This is only for Zimbabwe but still.)
 */
function erpw_location_country_code_from_tid($tid) {
  // this doesn't work but https://api.drupal.org/api/drupal/core%21lib%21Drupal%21Core%21Config%21ConfigFactory.php/function/ConfigFactory%3A%3AlistAll/8.2.x should
  // $locations = \Drupal::config('domain.location');
  // @TODO unhard-code-this but probably save it in an alternate config rather than iterating through configs, ugh.
  // Also TODO we probably want to take any tid and find the root one.
  if ($tid == 10401) {
    return 'bn';
  }
  elseif ($tid == 1) {
    return 'zw';
  }
  else {
    return '';
  }
}

/**
 * Utility function to recombine the parts of a parsed URL.
 *
 * Via https://www.php.net/manual/en/function.parse-url.php#106731
 */
function erpw_location_unparse_url($parsed_url) {
  $scheme   = isset($parsed_url['scheme']) ? $parsed_url['scheme'] . '://' : '';
  $host     = isset($parsed_url['host']) ? $parsed_url['host'] : '';
  $port     = isset($parsed_url['port']) ? ':' . $parsed_url['port'] : '';
  $user     = isset($parsed_url['user']) ? $parsed_url['user'] : '';
  $pass     = isset($parsed_url['pass']) ? ':' . $parsed_url['pass']  : '';
  $pass     = ($user || $pass) ? "$pass@" : '';
  $path     = isset($parsed_url['path']) ? $parsed_url['path'] : '';
  $query    = isset($parsed_url['query']) ? '?' . $parsed_url['query'] : '';
  $fragment = isset($parsed_url['fragment']) ? '#' . $parsed_url['fragment'] : '';
  return "$scheme$user$pass$host$port$path$query$fragment";
}
